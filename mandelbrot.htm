<html>

    <head>

        <style type="text/css">
            canvas {
                border: 5px solid black;
            }
        </style>

    </head>

    <body>

        <canvas id="mandelbrot"></canvas><br>

        <button onclick="resetZoom()" value="Reset zoom">Reset Zoom</button><br>

        <br><br>

        <p id="showCplx"> </p>

        <p>
            Hold Ctrl and click to zoom in.<br> Hold Shift and click to zoom out.<br> Don't hold anything and click to move camera.<br> Zoomfactor: 1<input type="range" id="zoom" name="zoom" min=1 max=16 value=4>16<br>
        </p>

        <script type="text/javascript" src="complex.js"></script>

        <script type="text/javascript">
            //Thanks to morgunkorn for fixing the zoom

            //config
            var size = 512; //16384

            var maxIterations = 50;

            //end config

            var mandelbrot = document.getElementById("mandelbrot");
            mandelbrot.width = size;
            mandelbrot.height = size;

            var zoomEl = document.getElementById("zoom")

            var zoom = zoomEl.value;

            var centerX = 0;
            var centerY = 0;

            var ctx = document.getElementById("mandelbrot")
                .getContext('2d'); //set ctx as 2d canvas

            var z; //define z

            var temp = [];

            function showCoords(e) {
                var posX = e.offsetX;
                var posY = e.offsetY;
                var x = centerX + zoom * posX / size - zoom / 2;
                var y = - centerY - zoom * posY / size + zoom / 2;
                var crdsCplx = new Complex(x, y);
                document.getElementById("showCplx").innerHTML = "Complex: " + crdsCplx.string;
            }

            function clearCoor() {
                document.getElementById("showCplx")
                    .innerHTML = "Complex: ";
            }

            function resetZoom() {
                zoom = 4;
                centerX = 0;
                centerY = 0;
                drawMandelbrot();
                zoom = zoomEl.value;
            }

            function zoomIn(e) {
                var posX = e.offsetX;
                var posY = e.offsetY;
                switch (true) {
                case e.shiftKey:
                    zoom *= 2;
                    break;
                case e.ctrlKey:
                case e.altKey:
                    zoom /= 2;
                    break;
                }
                centerX += zoom * posX / size - zoom / 2;
                centerY += zoom * posY / size - zoom / 2;
                drawMandelbrot();
            }

            function MBitrs(complex) { //Check how many iterations |z|>2
                var j = 0;
                var b = new Complex(0, 0);
                for (var a = 0; a < maxIterations; a++) {
                    b = complex.add(b.pow(2));
                    if (b.absSqr() <= 4) {
                        j++;
                    } else {
                        break;
                    }
                }
                return [j, b];
            }

            function makeColor(n, z) { //make color
                var Zr = z.a;
                var Zi = z.b;
                var hue = 10 * (1 + n - Math.log(Math.log(Math.sqrt(Zr * Zr + Zi * Zi))) / Math.log(2.0));
                return "hsl(" + hue + ",100%,50%)";
            }
	function drawMandelbrot() {
                for (var x = 0; x < size; x++) {
                    for (var y = 0; y < size; y++) {
                        var halfsize = size / 2;
                        var quartsize = halfsize / 2;
                        Zr = (((x - halfsize) / quartsize) * (zoom / 4) + centerX);
                        Zi = (((y - halfsize) / quartsize) * (zoom / 4) + centerY);
                        z = new Complex(Zr, Zi);
                        temp = MBitrs(z); //temp = [n,[Zr,Zi]]
                        var n = temp[0];
                        if (n == maxIterations) {
                            ctx.fillStyle = "#000000";
                        } else {
                            ctx.fillStyle = makeColor(n, temp[1]);
                        }
                        ctx.fillRect(x, y, 1, 1);
                    }
                }
            }

            mandelbrot.addEventListener('click', zoomIn);
            mandelbrot.addEventListener('mousemove', showCoords);
            mandelbrot.addEventListener('mouseout', clearCoor);

            drawMandelbrot();
        </script>
    </body>

</html>